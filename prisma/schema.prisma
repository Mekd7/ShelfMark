// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
   
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//enums(constant values) for the status of the books
enum BookStatus{
  TO_READ
  READING
  FINISHED
}

model User{
  //fields, generated by clerk authentication library
  id String  @id @unique
  email String

  //a one-to-many relationship to book and quotes, one user can have multiple books and quotes
  books Book[] @relation("UserBooks")
  quotes Quote[] @relation("UserQuotes")

}

model Book{
  //fields
  id String @id @default(cuid()) 
  title String
  author String
  coverImg String? 
  status BookStatus @default(TO_READ)

  //a single book may have multiple quotes
  quotes Quote[] @relation("BookQuotes")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //created a forign key user_id which is going to refer to the primary key passed in the references(user_id in user table)

  userId String
  /*the firat attribute is just a relation name
  fields is where the forign key(a key that indicate a primary key in some other table) goes. it points to forign key that is defined in this model itself
  references point to the primary key the forign key indicates
  the onDelete, for example if a user is deleted all the related books and quotes will go as well, successfully getting rid of orphan data in the db*/
  user User @relation("UserBooks", fields: [userId], references: [id], onDelete: Cascade)
}

model Quote{
  id String @id @default(cuid()) 
  content String
  reflection String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  

  userId String
  bookId String

  book Book @relation("BookQuotes",fields: [bookId], references: [id], onDelete: Cascade)
  user User @relation("UserQuotes",fields: [userId], references: [id], onDelete: Cascade)


}